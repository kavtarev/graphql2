.app-header {
    opacity: 1;
    filter: alpha(opacity=100);
    transition: all 0.5s ease-in-out;
}
.bigF {
    display: none;
}
.hide {
    top: -60px;
}
header {
    transition: transform 0.4s;
}

.scroll-down .app-header {
    transform: translate3d(0, -60px, 0);
    opacity: 0;
}

.scroll-up .app-header {
    transform: none;
}

header {
    position: fixed;
    z-index: 10;
    top: 0;
    left: 0;
    
    width: 100%;
}
.header-row {
    position: relative;
    z-index: 2;
    display: flex;
    justify-content: space-between;
}
.header-row-search {
    position: absolute;
    left: 0.9375em;
    top: 0.9375em;

    width: 1.25em;
    height: 1.25em;
    
}
.header-row-search svg {
    position: absolute;
    top: 50%;
    left: 50%;

    transform: translate(-50%, -50%);
    
    stroke-width: 1.5;
}
.header-row-search .doubled {
    opacity: 0;
}

@media (max-width: 1023px) {
    .header-logo-wrap {
        visibility: visible;
        opacity: 1;
        transition: opacity 0.5s linear;
    }
}
.header-logo-wrap {
    position: absolute;
    left: 50%;
    top: 0.9375em;

    transform-origin: center;
    transform: translateX(-50%);
    transition: all 0.35s;
}
.header-logo {
    width: auto;
    height: 1.5em;
    display: inline-block;

    transform-origin: center;
}
.header-logo svg {
    width: auto;
    stroke-width: 0;
}
.hamburger {
    top: 0.9375em;
    
    width: 1.25em;
    height: 1.25em;
    
    cursor: pointer;
}
.hamburger,
.header-search {
    position: absolute;
    right: 0.9375em;
}
.hamburger svg {
    position: absolute;
    top: 50%;
    left: 50%;

    transform: translate(-50%, -50%);

    stroke-width: 1.5;
}
svg {
    vertical-align: bottom;

    width: 100%;
    height: 100%;
}
.hamburger .doubled {
    opacity: 0;
}

@media (min-width: 1024px) {
    .bigF {
        display: block;
    }
    .scroll-down .app-header {
        transform: none;
        opacity: 1 !important;
        g {
            stroke: #000 !important;
        }
        path {
            fill: #000 !important;
        }
    }
    .scroll-up .app-header {
        transform: none;
    }
    header {
        padding-right: 17px;
    }
    .hide {
        opacity: 0;
        top: 0px;
    }
    .hamburger:hover .origin {
        top: 65%;
    }
    .hamburger:hover .doubled {
        opacity: 1;
        top: 35%;
    }
    .buy-btn .ico,
    .hamburger,
    .header-row-search,
    .play-btn .ico {
        width: 1.875em;
        height: 1.875em;
    }
    .header-row-search:hover .origin {
        left: 40%;
        top: 60%;
    }
    .header-row-search:hover .doubled {
        left: 60%;
        top: 40%;
        
        opacity: 1;
        
    }
    .onlyF {
        transform: rotateY(90deg);
    }
    .onlyF .active {
        transform: rotateY(-90deg);
    }
    .onlyString {
        transform-origin: center;
        transform: translateX(-50%) rotateY(-90deg);
    }

    .header-logo {
        height: 2.4375em;
    }
    .header-row-search {
        top: 1.25em;
        left: 1.25em;

        width: 1.875em;
        height: 1.875em;
    }
    .header-row-search svg {
        transition: all 0.2s ease-in;
    }
    .header-logo-wrap {
        transform-origin: center;
        top: 1.25em;
    }
    .header-logo {
        width: auto;
        height: 2.4375em;
    }
    .hamburger {
        top: 1.25em;
        right: 1.25em;

        width: 1.875em;
        height: 1.875em;

    }
    header.isWindows {
        padding-right: 17px;
    }
    .hamburger svg {
        transition: all 0.2s ease-in;
    }
}
@media screen and (min-width: 768px) and (max-width: 1023px) {
    .buy-btn .ico,
    .hamburger,
    .header-row-search,
    .play-btn .ico {
        width: 1.875em;
        height: 1.875em;
    }
    .header-logo {
        height: 2.4375em;
    }
    /*   .header-about path, .header-about svg, .header-index path, .header-index svg, .header-rubric path, .header-rubric svg, .header-user-id-author path, .header-user-id-author svg {
     // fill: #fff!important;
  } */
}

@media (max-width: 767px) {
    g {
        stroke: #000 !important;
    }
    path {
        fill: #000 !important;
    }
}
